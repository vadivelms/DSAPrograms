package demo.practice;

import java.util.ArrayList;
import java.util.List;

public class EffcientJointer {
    public static void main(String[] args) {
        List<Float> weight=new ArrayList<>();

        weight.add(2.02f);
        weight.add(2.95f);
        weight.add(1.14f);
        weight.add(2.13f);
        weight.add(1.86f);
        weight.add(1.45f);
        weight.add(1.5f);
        weight.add(2.77f);
        weight.add(1.55f);
        weight.add(1.49f);
        weight.add(1.2f);
        weight.add(2.89f);
        weight.add(2f);
        weight.add(1.75f);
        weight.add(2.56f);
        weight.add(2.05f);
        weight.add(2.19f);
        weight.add(1.11f);
        weight.add(1.81f);
        weight.add(2.45f);
        weight.add(1.37f);
        weight.add(2.67f);
        weight.add(1.63f);
        weight.add(1.89f);
        weight.add(1.76f);
        weight.add(2.05f);
        weight.add(2.98f);
        weight.add(2.53f);
        weight.add(2.15f);
        weight.add(1.21f);
        weight.add(2.43f);
        weight.add(2.21f);
        weight.add(2.15f);
        weight.add(2.85f);
        weight.add(1.28f);
        weight.add(2.17f);
        weight.add(1.52f);
        weight.add(1.33f);
        weight.add(2.14f);
        weight.add(2.93f);
        weight.add(1.39f);
        weight.add(2.83f);
        weight.add(1.19f);
        weight.add(1.21f);
        weight.add(1.09f);
        weight.add(1.77f);
        weight.add(2.93f);
        weight.add(2.53f);
        weight.add(1.4f);
        weight.add(2.49f);
        weight.add(2.81f);
        weight.add(2.05f);
        weight.add(2.48f);
        weight.add(2.47f);
        weight.add(1.95f);
        weight.add(1.41f);
        weight.add(2.12f);
        weight.add(2.45f);
        weight.add(1.68f);
        weight.add(1.57f);
        weight.add(1.66f);
        weight.add(1.69f);
        weight.add(1.68f);
        weight.add(2.93f);
        weight.add(1.27f);
        weight.add(1.77f);
        weight.add(2.97f);
        weight.add(1.89f);
        weight.add(2.15f);
        weight.add(1.37f);
        weight.add(1.35f);
        weight.add(2.05f);
        weight.add(1.12f);
        weight.add(1.37f);
        weight.add(2.89f);
        weight.add(2.05f);
        weight.add(1.11f);
        weight.add(2.23f);
        weight.add(2.6f);
        weight.add(1.33f);
        weight.add(1.42f);
        weight.add(1.31f);
        weight.add(1.89f);
        weight.add(2.33f);
        weight.add(1.94f);
        weight.add(1.47f);
        weight.add(2.29f);
        weight.add(2.61f);
        weight.add(2.92f);
        weight.add(2.45f);
        weight.add(1.89f);
        weight.add(1.49f);
        weight.add(2.34f);
        weight.add(2.63f);
        weight.add(1.82f);
        weight.add(2.53f);
        weight.add(1.59f);
        weight.add(2.03f);
        weight.add(1.92f);
        weight.add(1.65f);
        weight.add(2.17f);
        weight.add(2.67f);
        weight.add(1.43f);
        weight.add(1.17f);
        weight.add(1.61f);
        weight.add(2.51f);
        weight.add(2.48f);
        weight.add(2.25f);
        weight.add(1.56f);
        weight.add(2.39f);
        weight.add(2.12f);
        weight.add(2.61f);
        weight.add(2.76f);
        weight.add(1.93f);
        weight.add(1.71f);
        weight.add(2.57f);
        weight.add(2.77f);
        weight.add(2.47f);
        weight.add(2.36f);
        weight.add(2.05f);
        weight.add(1.5f);
        weight.add(1.25f);
        weight.add(1.98f);
        weight.add(1.41f);
        weight.add(1.46f);
        weight.add(1.63f);
        weight.add(2.67f);
        weight.add(1.57f);
        weight.add(2.25f);
        weight.add(1.31f);
        weight.add(1.41f);
        weight.add(2.45f);
        weight.add(1.47f);
        weight.add(2.93f);
        weight.add(1.46f);
        weight.add(1.73f);
        weight.add(1.82f);
        weight.add(2.07f);
        weight.add(1.86f);
        weight.add(1.05f);
        weight.add(2.29f);
        weight.add(1.35f);
        weight.add(1.98f);
        weight.add(1.97f);
        weight.add(2.4f);
        weight.add(1.53f);
        weight.add(2.65f);
        weight.add(2.29f);
        weight.add(1.12f);
        weight.add(1.35f);
        weight.add(1.45f);
        weight.add(2.77f);
        weight.add(2.61f);
        weight.add(2.63f);
        weight.add(1.96f);
        weight.add(2.25f);
        weight.add(2.14f);
        weight.add(1.87f);
        weight.add(1.94f);
        weight.add(2.93f);
        weight.add(2.88f);
        weight.add(2.19f);
        weight.add(2.02f);
        weight.add(2.53f);
        weight.add(1.38f);
        weight.add(1.27f);
        weight.add(2.11f);
        weight.add(1.49f);
        weight.add(2.2f);
        weight.add(1.83f);
        weight.add(1.32f);
        weight.add(2.25f);
        weight.add(1.65f);
        weight.add(2.37f);
        weight.add(2.57f);
        weight.add(2.29f);
        weight.add(2.29f);
        weight.add(1.09f);
        weight.add(2.99f);
        weight.add(1.01f);
        weight.add(1.73f);
        weight.add(1.89f);
        weight.add(2.47f);
        weight.add(1.09f);
        weight.add(2.69f);
        weight.add(2.71f);
        weight.add(2.73f);
        weight.add(1.69f);
        weight.add(1.31f);
        weight.add(1.23f);
        weight.add(2.36f);
        weight.add(2.29f);
        weight.add(1.1f);
        weight.add(1.99f);
        weight.add(1.44f);
        weight.add(2.89f);
        weight.add(1.32f);
        weight.add(1.93f);
        weight.add(1.72f);
        weight.add(1.17f);
        System.out.println( efficientJanitor(weight));

    }
    public static int efficientJanitor(List<Float> weight) {
        int count=0;
        float sum=0;
        for(int i=0;i<weight.size();i++){

            float t=weight.get(i);


            if(sum+t>=3){
                sum=t;
                count++;
            }
            else{
                sum+=t;
            }
        }
        return count;
    }
}
